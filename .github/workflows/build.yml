name: "Build Indices"
on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'
jobs:
  pin-nixpkgs:
    name: Pin nixpkgs revision
    runs-on: ubuntu-latest
    strategy:
      matrix:
        channel: [ nixpkgs-unstable, master ]
    steps:
    - name: Fetch nixpkgs revision
      run: curl https://api.github.com/repos/NixOS/nixpkgs/git/refs/heads/${{ matrix.channel }} | jq .object.sha | tr -d \" > revision.txt
    - name: Upload revision artifact
      uses: actions/upload-artifact@v3
      with:
        name: artifact-${{ matrix.channel }}-revision
        path: revision.txt

  build-database:
    name: Build database
    runs-on: ubuntu-latest
    needs: pin-nixpkgs
    strategy:
      matrix:
        channel: [ nixpkgs-unstable, master ]
        platform: [ aarch64-darwin, aarch64-linux, i686-linux, x86_64-darwin, x86_64-linux ]
    steps:
    - uses: cachix/install-nix-action@v20
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Download revision artifact
      uses: actions/download-artifact@v3
      with:
        name: artifact-${{ matrix.channel }}-revision
    - name: Run nix-index
      run: nix run nixpkgs#nix-index -- --db ./out --nixpkgs https://github.com/NixOS/nixpkgs/tarball/$(<revision.txt) --system ${{ matrix.platform }} 2>&1 | grep -v '+ generating index'
    - name: Rename built index
      run: mv out/files index-${{ matrix.platform }}
    - name: Upload index artifact
      uses: actions/upload-artifact@v3
      with:
        name: artifact-${{ matrix.channel }}-${{ matrix.platform }}
        path: index-${{ matrix.platform }}

  create-release:
    name: Create release
    runs-on: ubuntu-latest
    needs: build-database
    strategy:
      matrix:
        channel: [ nixpkgs-unstable, master ]
    steps:
    - uses: actions/checkout@v3
    - uses: cachix/install-nix-action@v20
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Set up github-actions identity
      run: |
        git config user.name "github-actions"
        git config user.email "github-actions[bot]@users.noreply.github.com"
    - name: Download artifacts
      uses: actions/download-artifact@v3
    - name: Move artifacts
      run: |
        mv artifact-${{ matrix.channel }}-*/* .
        mkdir indices
        mv index-* indices
    - name: Generate generic release tag
      run: echo "TAG=`date +'%y%m%d'`.`grep -oE '^.{7}' revision.txt`" >> $GITHUB_ENV
    - name: Assert release tag is available
      run: |
        ! git ls-remote --exit-code origin "refs/tags/r${{ env.TAG }}"
    - name: Write release markdown
      run: |
        >> release.md echo "- Built against channel: [\`${{ matrix.channel }}\`](https://github.com/nixos/nixpkgs/tree/${{ matrix.channel }})"
        >> release.md echo "- Built against commit: [\`$(grep -oE '^.{7}' revision.txt)\`](https://github.com/NixOS/nixpkgs/commit/$(<revision.txt))"
        >> release.md echo "- Build date: \`$(date +'%Y-%m-%d')\`"
    - name: Generate release flake and metadata
      run: |
        cp releases/flake.nix .
        python3 releases/describe.py ${{ env.TAG }} ${{ matrix.channel }} $(<revision.txt)
    - name: Commit r${{ env.TAG }} to releases/${{ matrix.channel }}
      run: |
        # set HEAD to channel release branch, or new orphan branch if none exists on remote
        git fetch origin releases/${{ matrix.channel }}:releases/${{ matrix.channel }} || true
        git symbolic-ref HEAD refs/heads/releases/${{ matrix.channel }}
        git reset
        # add files to git index before updating flake.lock
        git add flake.nix metadata.json indices
        nix flake update
        git add flake.lock
        # write and add README.md
        >  README.md echo "# ${GITHUB_REPOSITORY#*/}"
        >> README.md echo "## release ${{ env.TAG }}"
        >> README.md cat release.md
        git add README.md
        # commit, tag and push
        git commit -m "release ${{ env.TAG }}"
        git tag "r${{ env.TAG }}"
        git push origin releases/${{ matrix.channel }} "r${{ env.TAG }}"
    - name: Generate standalone flake and metadata
      run: |
        cp standalone/flake.nix .
        python3 standalone/describe.py ${{ env.TAG }} ${{ matrix.channel }} $(<revision.txt)
    - name: Commit s${{ env.TAG }} to standalone/${{ matrix.channel }}
      run: |
        # set HEAD to channel standalone branch, or new orphan branch if none exists on remote
        git fetch origin standalone/${{ matrix.channel }}:standalone/${{ matrix.channel }} || true
        git symbolic-ref HEAD refs/heads/standalone/${{ matrix.channel }}
        git reset
        # add files to git index before updating flake.lock
        git add flake.nix metadata.json
        nix flake update
        git add flake.lock
        # write and add README.md
        >  README.md echo "# ${GITHUB_REPOSITORY#*/}"
        >> README.md echo "## standalone release ${{ env.TAG }}"
        >> README.md cat release.md
        git add README.md
        # commit, tag and push
        git commit -m "standalone release ${{ env.TAG }}"
        git tag "s${{ env.TAG }}"
        git push origin standalone/${{ matrix.channel }} "s${{ env.TAG }}"
    - uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: "r${{ env.TAG }}"
        body_path: release.md
        tag_name: "r${{ env.TAG }}"
        files: |
          indices/index-*
          revision.txt
